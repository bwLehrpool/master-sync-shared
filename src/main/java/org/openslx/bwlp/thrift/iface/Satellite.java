/**
 * Autogenerated by Thrift Compiler (0.15.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.openslx.bwlp.thrift.iface;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.15.0)", date = "2021-12-17")
public class Satellite implements org.apache.thrift.TBase<Satellite, Satellite._Fields>, java.io.Serializable, Cloneable, Comparable<Satellite> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("Satellite");

  private static final org.apache.thrift.protocol.TField ADDRESS_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("addressList", org.apache.thrift.protocol.TType.LIST, (short)1);
  private static final org.apache.thrift.protocol.TField DISPLAY_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("displayName", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CERT_SHA256_FIELD_DESC = new org.apache.thrift.protocol.TField("certSha256", org.apache.thrift.protocol.TType.STRING, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SatelliteStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SatelliteTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> addressList; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String displayName; // required
  public @org.apache.thrift.annotation.Nullable java.nio.ByteBuffer certSha256; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    ADDRESS_LIST((short)1, "addressList"),
    DISPLAY_NAME((short)2, "displayName"),
    CERT_SHA256((short)3, "certSha256");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // ADDRESS_LIST
          return ADDRESS_LIST;
        case 2: // DISPLAY_NAME
          return DISPLAY_NAME;
        case 3: // CERT_SHA256
          return CERT_SHA256;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.ADDRESS_LIST, new org.apache.thrift.meta_data.FieldMetaData("addressList", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.DISPLAY_NAME, new org.apache.thrift.meta_data.FieldMetaData("displayName", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CERT_SHA256, new org.apache.thrift.meta_data.FieldMetaData("certSha256", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING        , true)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(Satellite.class, metaDataMap);
  }

  public Satellite() {
  }

  public Satellite(
    java.util.List<java.lang.String> addressList,
    java.lang.String displayName,
    java.nio.ByteBuffer certSha256)
  {
    this();
    this.addressList = addressList;
    this.displayName = displayName;
    this.certSha256 = org.apache.thrift.TBaseHelper.copyBinary(certSha256);
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public Satellite(Satellite other) {
    if (other.isSetAddressList()) {
      java.util.List<java.lang.String> __this__addressList = new java.util.ArrayList<java.lang.String>(other.addressList);
      this.addressList = __this__addressList;
    }
    if (other.isSetDisplayName()) {
      this.displayName = other.displayName;
    }
    if (other.isSetCertSha256()) {
      this.certSha256 = org.apache.thrift.TBaseHelper.copyBinary(other.certSha256);
    }
  }

  public Satellite deepCopy() {
    return new Satellite(this);
  }

  @Override
  public void clear() {
    this.addressList = null;
    this.displayName = null;
    this.certSha256 = null;
  }

  public int getAddressListSize() {
    return (this.addressList == null) ? 0 : this.addressList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.String> getAddressListIterator() {
    return (this.addressList == null) ? null : this.addressList.iterator();
  }

  public void addToAddressList(java.lang.String elem) {
    if (this.addressList == null) {
      this.addressList = new java.util.ArrayList<java.lang.String>();
    }
    this.addressList.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.String> getAddressList() {
    return this.addressList;
  }

  public Satellite setAddressList(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.String> addressList) {
    this.addressList = addressList;
    return this;
  }

  public void unsetAddressList() {
    this.addressList = null;
  }

  /** Returns true if field addressList is set (has been assigned a value) and false otherwise */
  public boolean isSetAddressList() {
    return this.addressList != null;
  }

  public void setAddressListIsSet(boolean value) {
    if (!value) {
      this.addressList = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDisplayName() {
    return this.displayName;
  }

  public Satellite setDisplayName(@org.apache.thrift.annotation.Nullable java.lang.String displayName) {
    this.displayName = displayName;
    return this;
  }

  public void unsetDisplayName() {
    this.displayName = null;
  }

  /** Returns true if field displayName is set (has been assigned a value) and false otherwise */
  public boolean isSetDisplayName() {
    return this.displayName != null;
  }

  public void setDisplayNameIsSet(boolean value) {
    if (!value) {
      this.displayName = null;
    }
  }

  public byte[] getCertSha256() {
    setCertSha256(org.apache.thrift.TBaseHelper.rightSize(certSha256));
    return certSha256 == null ? null : certSha256.array();
  }

  public java.nio.ByteBuffer bufferForCertSha256() {
    return org.apache.thrift.TBaseHelper.copyBinary(certSha256);
  }

  public Satellite setCertSha256(byte[] certSha256) {
    this.certSha256 = certSha256 == null ? (java.nio.ByteBuffer)null   : java.nio.ByteBuffer.wrap(certSha256.clone());
    return this;
  }

  public Satellite setCertSha256(@org.apache.thrift.annotation.Nullable java.nio.ByteBuffer certSha256) {
    this.certSha256 = org.apache.thrift.TBaseHelper.copyBinary(certSha256);
    return this;
  }

  public void unsetCertSha256() {
    this.certSha256 = null;
  }

  /** Returns true if field certSha256 is set (has been assigned a value) and false otherwise */
  public boolean isSetCertSha256() {
    return this.certSha256 != null;
  }

  public void setCertSha256IsSet(boolean value) {
    if (!value) {
      this.certSha256 = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case ADDRESS_LIST:
      if (value == null) {
        unsetAddressList();
      } else {
        setAddressList((java.util.List<java.lang.String>)value);
      }
      break;

    case DISPLAY_NAME:
      if (value == null) {
        unsetDisplayName();
      } else {
        setDisplayName((java.lang.String)value);
      }
      break;

    case CERT_SHA256:
      if (value == null) {
        unsetCertSha256();
      } else {
        if (value instanceof byte[]) {
          setCertSha256((byte[])value);
        } else {
          setCertSha256((java.nio.ByteBuffer)value);
        }
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case ADDRESS_LIST:
      return getAddressList();

    case DISPLAY_NAME:
      return getDisplayName();

    case CERT_SHA256:
      return getCertSha256();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case ADDRESS_LIST:
      return isSetAddressList();
    case DISPLAY_NAME:
      return isSetDisplayName();
    case CERT_SHA256:
      return isSetCertSha256();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof Satellite)
      return this.equals((Satellite)that);
    return false;
  }

  public boolean equals(Satellite that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_addressList = true && this.isSetAddressList();
    boolean that_present_addressList = true && that.isSetAddressList();
    if (this_present_addressList || that_present_addressList) {
      if (!(this_present_addressList && that_present_addressList))
        return false;
      if (!this.addressList.equals(that.addressList))
        return false;
    }

    boolean this_present_displayName = true && this.isSetDisplayName();
    boolean that_present_displayName = true && that.isSetDisplayName();
    if (this_present_displayName || that_present_displayName) {
      if (!(this_present_displayName && that_present_displayName))
        return false;
      if (!this.displayName.equals(that.displayName))
        return false;
    }

    boolean this_present_certSha256 = true && this.isSetCertSha256();
    boolean that_present_certSha256 = true && that.isSetCertSha256();
    if (this_present_certSha256 || that_present_certSha256) {
      if (!(this_present_certSha256 && that_present_certSha256))
        return false;
      if (!this.certSha256.equals(that.certSha256))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAddressList()) ? 131071 : 524287);
    if (isSetAddressList())
      hashCode = hashCode * 8191 + addressList.hashCode();

    hashCode = hashCode * 8191 + ((isSetDisplayName()) ? 131071 : 524287);
    if (isSetDisplayName())
      hashCode = hashCode * 8191 + displayName.hashCode();

    hashCode = hashCode * 8191 + ((isSetCertSha256()) ? 131071 : 524287);
    if (isSetCertSha256())
      hashCode = hashCode * 8191 + certSha256.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(Satellite other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetAddressList(), other.isSetAddressList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAddressList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.addressList, other.addressList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDisplayName(), other.isSetDisplayName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDisplayName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.displayName, other.displayName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCertSha256(), other.isSetCertSha256());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCertSha256()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.certSha256, other.certSha256);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("Satellite(");
    boolean first = true;

    sb.append("addressList:");
    if (this.addressList == null) {
      sb.append("null");
    } else {
      sb.append(this.addressList);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("displayName:");
    if (this.displayName == null) {
      sb.append("null");
    } else {
      sb.append(this.displayName);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("certSha256:");
    if (this.certSha256 == null) {
      sb.append("null");
    } else {
      org.apache.thrift.TBaseHelper.toString(this.certSha256, sb);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SatelliteStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SatelliteStandardScheme getScheme() {
      return new SatelliteStandardScheme();
    }
  }

  private static class SatelliteStandardScheme extends org.apache.thrift.scheme.StandardScheme<Satellite> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, Satellite struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // ADDRESS_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list8 = iprot.readListBegin();
                struct.addressList = new java.util.ArrayList<java.lang.String>(_list8.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _elem9;
                for (int _i10 = 0; _i10 < _list8.size; ++_i10)
                {
                  _elem9 = iprot.readString();
                  struct.addressList.add(_elem9);
                }
                iprot.readListEnd();
              }
              struct.setAddressListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // DISPLAY_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.displayName = iprot.readString();
              struct.setDisplayNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CERT_SHA256
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.certSha256 = iprot.readBinary();
              struct.setCertSha256IsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, Satellite struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.addressList != null) {
        oprot.writeFieldBegin(ADDRESS_LIST_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRING, struct.addressList.size()));
          for (java.lang.String _iter11 : struct.addressList)
          {
            oprot.writeString(_iter11);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(struct.displayName);
        oprot.writeFieldEnd();
      }
      if (struct.certSha256 != null) {
        oprot.writeFieldBegin(CERT_SHA256_FIELD_DESC);
        oprot.writeBinary(struct.certSha256);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SatelliteTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SatelliteTupleScheme getScheme() {
      return new SatelliteTupleScheme();
    }
  }

  private static class SatelliteTupleScheme extends org.apache.thrift.scheme.TupleScheme<Satellite> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, Satellite struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetAddressList()) {
        optionals.set(0);
      }
      if (struct.isSetDisplayName()) {
        optionals.set(1);
      }
      if (struct.isSetCertSha256()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetAddressList()) {
        {
          oprot.writeI32(struct.addressList.size());
          for (java.lang.String _iter12 : struct.addressList)
          {
            oprot.writeString(_iter12);
          }
        }
      }
      if (struct.isSetDisplayName()) {
        oprot.writeString(struct.displayName);
      }
      if (struct.isSetCertSha256()) {
        oprot.writeBinary(struct.certSha256);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, Satellite struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list13 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRING);
          struct.addressList = new java.util.ArrayList<java.lang.String>(_list13.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _elem14;
          for (int _i15 = 0; _i15 < _list13.size; ++_i15)
          {
            _elem14 = iprot.readString();
            struct.addressList.add(_elem14);
          }
        }
        struct.setAddressListIsSet(true);
      }
      if (incoming.get(1)) {
        struct.displayName = iprot.readString();
        struct.setDisplayNameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.certSha256 = iprot.readBinary();
        struct.setCertSha256IsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

